Start reading data: 
 Time elapsed: 0:00:00.000094
Done reading data: 
 Time elapsed: 0:00:00.178523 

sizes: 
 train features: 		 (18995, 35) <class 'pandas.core.frame.DataFrame'> 
 train labels (sepsis) : 	 (18995, 1) <class 'pandas.core.frame.DataFrame'> 
 test features: 		 (12664, 35) <class 'pandas.core.frame.DataFrame'>

Start Scaling data: 
 Time elapsed: 0:00:00.178559
Done Scaling data: 
 Time elapsed: 0:00:00.209429 


sizes: 
 X train: 	 (18995, 35) <class 'numpy.ndarray'> 
 X test: 	 (12664, 35) <class 'numpy.ndarray'> 
 Y train: 	 (18995,) <class 'numpy.ndarray'>
grid: 
 GridSearchCV(estimator=LogisticRegression(random_state=42, verbose=False),
             n_jobs=2,
             param_grid={'C': array([1.000000e-05, 1.500005e+00, 3.000000e+00]),
                         'l1_ratio': array([0.  , 0.25, 0.5 , 0.75, 1.  ]),
                         'max_iter': array([ 5., 30.]), 'penalty': ['l2'],
                         'solver': ['liblinear', 'newton-cg', 'sag', 'saga',
                                    'lbfgs']},
             scoring='roc_auc')
X train: 
 [[-1.70642596e+00  2.73520863e-01 -1.13890316e+00 -1.27189584e+00
  -6.71781408e-02  6.79619998e-02 -2.90998546e+00  2.47105613e-01
   2.80674737e-01 -3.48071138e-01 -2.13027375e+00 -2.88837318e-01
  -8.29602950e-01 -1.80222221e-01 -2.25796177e-02  5.85938177e-01
  -1.30302530e+00 -8.28946215e-01  3.47431280e-01 -5.85674863e-01
  -1.16903158e+00 -7.45152837e-01 -6.43785875e-01 -1.30763186e+00
   2.70017199e-01  3.90556800e-01  1.33144089e+00 -2.81971921e-01
   1.65281487e+00 -2.95809969e+00 -5.25286946e-01  9.02095837e-01
  -2.33207827e-01 -4.52059585e-01  1.49048779e-01]
 [ 5.42565645e-01 -1.95372724e-02  4.35478948e-01  4.15428466e-02
  -3.80538656e-01 -1.15836673e+00  1.37995547e+00  2.69730328e-01
   2.31727492e-01 -1.72945102e-02 -3.58436026e-01 -1.41678488e-01
  -8.22430668e-01 -2.57209442e-01 -3.85639812e-01 -9.85403423e-02
  -2.86942748e-02 -2.59330336e-01 -3.85983943e-01 -4.28681952e-02
   1.51160681e+00 -2.69156848e-01 -9.19974197e-01  1.84352116e+00
   3.26264792e-01 -2.97288140e-01  1.76839694e-01  2.75161477e-01
   1.56592306e-01  1.02700422e+00 -3.74826853e-01 -4.42994377e-01
  -4.15157033e-01  5.85354455e-01  5.03194374e-01]
 [ 3.60214974e-01 -2.85166321e-01 -5.79410562e-02  9.58100358e-03
   5.72972626e-01 -6.34303639e-02  1.13302588e+00  3.91189327e-01
   4.47242801e-03 -1.00267657e+00 -3.39099057e-01 -7.86104176e-02
   9.60478962e-01 -7.77789696e-01  3.66275262e-01  1.39417852e-01
   6.51953536e-02 -5.48913333e-02 -5.14130119e-01  1.23332728e+00
  -2.84422478e-02 -5.13587220e-01 -7.64618266e-01 -3.97343617e-02
  -2.10809000e-01  2.39531647e-01 -6.70096597e-01  6.28344255e-01
  -4.53844097e-01  4.93195017e-01  1.71411908e+00  2.14823465e-01
  -6.72893874e-02 -2.81556482e-01 -2.75925936e-01]
 [ 1.02883410e+00 -6.55458990e-01 -7.65560925e-01  3.23189590e-02
   2.90683032e-02 -9.08037730e-02 -6.98675706e-01  2.49487162e-01
  -5.95714024e-01 -1.51862770e+00 -1.53135507e+00 -1.05090983e+00
   8.06274911e-01 -5.28497743e-01 -1.61226051e-01  7.89777212e-02
  -3.67190294e-02 -1.42302583e+00  7.88286364e-01 -8.08897385e-02
   9.35585664e-02 -1.91968309e-01 -4.71168173e-01 -5.51510603e-02
  -1.75852503e+00  1.71153252e-01  6.02309378e-01  3.74649583e-01
   7.82896322e-01 -5.09291948e-01  1.01466815e-01 -2.02449047e-01
  -2.17177060e-01  1.07538863e+00 -4.17584174e-01]
 [ 8.46483430e-01  3.66635394e-01 -1.49966083e+00  3.10537149e-01
  -5.52886939e-01  7.34366816e-02 -6.84524255e-02  1.01634594e+00
   1.08247722e+00 -1.67691715e+00 -7.58183922e-01 -3.41394043e-01
  -4.76965778e-01 -1.09673675e+00  6.62914142e-01 -4.07273452e-01
  -9.40960245e-02 -9.29414335e-01  2.02300298e+00 -2.75470578e-01
  -1.01754442e+00 -5.90775759e-01 -4.02121092e-01 -1.39942671e+00
  -8.20460331e-01 -1.46811769e-01  4.59342414e-01 -3.16792758e-01
  -2.98901524e-01 -4.49532176e-01 -4.91415929e-01 -4.53582192e-02
  -5.04570820e-02  5.13080552e-02  5.03194374e-01]
 [ 6.64132759e-01 -7.90438969e-01 -1.14624416e+00  3.45716627e-01
  -2.86530501e-01  3.71806841e-01 -3.08010983e-01  3.11407436e-01
  -1.98309014e-01  1.80567308e-01 -8.54912717e-01 -5.04319890e-01
  -1.42857001e-01 -1.39895582e-01 -2.58600988e-01 -7.28297115e-01
  -1.66571430e-02 -6.72044701e-01  1.19529151e+00 -5.42502451e-01
  -9.60092510e-01  7.81915766e-02  4.52336531e-01 -1.37081010e+00
  -9.72873164e-01 -4.46008403e-01  7.93885109e-01 -6.30180294e-01
   4.17854593e-02 -3.66942828e-01 -1.12999655e+00 -6.19721559e-01
  -6.00755423e-02  5.41696221e-01  1.49048779e-01]
 [-6.73105493e-01 -3.65727488e-03 -4.65104322e-01 -3.61305080e-01
   2.23799481e-01  6.26379545e-01 -6.84524255e-02 -1.13699061e-01
  -1.16730273e-01  1.57609296e-01  2.94318536e-01 -1.15400125e-01
   2.64169971e-01  1.57055127e-01  2.56647850e-01 -1.03422283e-02
  -1.86633316e-02  4.24486715e-01  2.34390603e-02  8.08922815e-01
  -7.24117251e-01 -2.04833065e-01 -4.82548037e-02 -9.67356104e-01
  -4.38806593e-02  1.16823709e-01 -4.11612327e-01 -8.29957074e-02
  -5.27581828e-01 -1.68191226e-01 -1.01129449e-01  3.91550646e-01
  -1.00953998e-01 -2.02263689e-01 -3.46755055e-01]
 [-1.26053481e-01 -1.80936362e-02  5.28027972e-01 -2.58769772e-01
  -2.19381820e-01 -9.08037730e-02  2.89042652e-01  5.40036140e-01
   3.57591836e-01  1.03816991e+00  1.11715053e+00 -3.36138370e-01
  -1.13860874e+00  1.90049650e-01 -4.70845687e-02  3.50809392e-01
   2.06579658e-02  4.75638165e-01 -7.88959340e-01 -3.93805007e-01
   2.01574730e+00 -6.80829054e-01 -5.66107909e-01  2.32647695e+00
   2.57316129e-01  1.44262873e-01 -1.44040260e+00  2.25417423e-01
  -8.55201366e-01  7.44320352e-01 -2.95257958e-01 -2.56449019e-01
  -3.96721651e-01  9.29723526e-01  5.03194374e-01]
 [ 4.20998531e-01  1.15009045e-02  2.59556791e+00  6.05058025e-01
   3.89432896e-01  4.01917591e-01  5.58085339e-01 -7.96012850e-01
  -1.93647372e-01  1.12728325e+00  1.67837177e-01 -1.57445505e-01
   3.04731340e-02 -1.19205427e+00 -2.77385548e-02  6.62550609e-01
  -1.32614846e-01  2.12652991e-01 -4.26489049e-02 -1.40260277e-01
  -1.26137707e+00 -5.65046246e-01  6.42216003e-01  1.78920774e-01
   8.13155962e-02  8.77381966e-02 -3.00098096e-01  1.53866043e+00
  -1.68227065e-01  3.08544035e-01  8.39141155e-01 -5.95176117e-01
  -3.20216999e-02 -1.68705663e+00 -1.34267698e-01]
 [-1.58485885e+00  4.79960830e-01 -2.55886211e+00 -1.98814144e+00
  -1.33628823e+00  1.27786668e+00 -2.78526852e-01  3.53483401e+00
   6.77084630e+00 -1.33405736e+00  2.16882763e-01 -4.57746608e+00
  -1.27667516e+00 -3.10573661e+00 -2.08946219e-01 -2.99180131e-01
  -2.90702511e-01 -1.55025857e-01 -3.84372042e-01 -7.91167411e-01
   2.99287086e-01 -9.50988940e-01 -3.67322654e+00  5.82878581e-01
   1.89212520e+00  2.63787867e-01  1.11241550e+00  1.65804616e+00
  -1.17722057e+00 -7.19458338e-01  1.44902939e+00  1.62373183e+00
  -6.61229308e-01 -5.00850612e-01  6.87781509e+00]
 [ 1.39353544e+00  4.18172634e-02  1.43542788e+00  3.23043384e+00
   1.92463429e-01 -2.06168923e+00 -2.16551118e+00 -6.87652371e-01
  -5.05977409e-01  1.37672074e-01 -1.44539345e+00  1.82394303e+00
   1.64355721e-01  1.00758061e+00 -2.85040540e-01 -7.85014339e-01
  -1.47460642e-01 -1.36097690e+00  9.92191915e-01  2.59166555e+00
  -1.30945080e+00  6.44240861e-01  9.09773441e-01 -1.14963589e+00
  -1.56375845e-01 -4.07813088e-01  1.17017416e+00  1.35878127e-01
   2.16329202e-01 -1.32511356e+00 -7.09967961e-01 -1.09176368e-01
  -4.57638566e-01 -1.14952937e+00 -3.46755055e-01]
 [ 5.62971896e-02  2.05669965e-01 -2.12364214e-01  1.32276568e-02
  -4.85738258e-01 -3.33196139e-02 -1.16364137e-01  1.00562897e+00
   1.63022020e+00 -4.71621495e-01  4.50034729e-02  4.22700500e-02
  -1.00421002e-01 -1.58798854e+00  1.95909708e+00 -4.40710108e-01
  -4.39413085e-02  1.17744811e-01  6.90766318e-01 -1.30568511e-01
  -9.49447010e-01  1.81109628e-01  4.43705646e-01 -9.64433985e-01
   1.17604366e-01 -2.58873311e-01  7.02958120e-01 -2.17304651e-01
   1.31390803e-01 -2.36679954e-01 -1.34860502e-01 -4.53582192e-02
   1.33896739e-01 -1.12905720e+00  2.19877898e-01]
 [-3.69187709e-01 -2.18037241e-01 -3.88286011e-01  7.60787977e-02
   8.66188537e-01 -1.43210082e+00 -3.89092340e-01  1.26283626e+00
   4.48493862e-01 -1.05191547e+00 -1.26815254e+00  1.15121695e+00
  -1.04417370e+00  7.72952893e-01  2.67610591e-01 -2.97919307e-01
  -1.12151722e-01 -1.73176931e+00 -6.02784707e-01  7.72283730e-02
   1.51033949e+00  1.81109628e-01 -1.00628305e+00  1.17727796e+00
   1.64779767e-01  3.07580771e-01 -1.04519290e-01 -9.53516641e-01
  -1.00641038e+00 -1.59462271e-01 -5.30535553e-01 -2.41721754e-01
   6.65675176e-02  1.63108716e+00  2.19877898e-01]
 [-6.52699242e-02  8.51263474e-02  1.30381426e+00  3.37394037e+00
  -5.73031544e-01 -1.76605641e+00  5.35972241e-01 -5.23325490e-01
  -1.66842928e-01 -2.91884423e-01 -5.50267553e-01  3.42692314e+00
  -3.24554798e-01  2.27237067e+00  3.79172605e-01 -3.32467871e-01
  -6.62619975e-03 -1.05412379e+00  8.65657640e-01 -5.39045947e-01
  -1.42748067e+00  2.00790505e+00  1.62613690e+00 -8.90776425e-01
   7.12740189e-01  1.05974311e+00 -5.35135783e-01  4.02088869e+00
   8.28545751e-02  2.20583022e-01 -7.86107766e-01  6.09591134e+00
   2.72921383e-02 -1.68546370e+00 -5.59242412e-01]
 [ 9.07266987e-01 -3.03645434e-02  7.83389866e-01  7.27971689e-01
   2.79756715e-01 -6.32797273e-01 -5.79864907e-03  2.36388642e-01
   6.85700103e-02  5.94335843e-02 -2.00488144e-01  2.47241278e-01
   9.74144275e-02 -2.82871849e-01  1.26384690e-01 -5.25264738e-01
   1.66455885e-02 -3.37614295e-01 -2.43330653e-01  1.22705121e-01
   2.95062681e-01  3.61216219e-01 -1.94979850e-01  5.31688803e-02
  -8.19838675e-02 -2.67873357e-01 -7.47870625e-01 -3.66536811e-01
  -4.31529393e-02  6.95049466e-02  9.57983184e-02 -1.72994517e-01
   5.29413656e-02  2.43463283e-01  7.39054035e-03]
 [-1.86837038e-01 -2.57015417e-01  1.26396312e+00 -5.66161188e-01
   2.57373821e-01 -1.24869898e+00  1.52678550e-01  1.41168307e+00
   5.39395887e-01 -1.40383764e+00  1.57509477e-01  6.88717768e-01
  -7.87764641e-01 -5.39495918e-01  1.57338312e-01 -2.70548506e-01
  -8.23115066e-03  2.91193638e-02 -6.06814461e-01 -6.13733542e-01
  -2.15752362e-01 -7.06558567e-01 -1.75717005e+00 -1.43217691e-01
   2.88161584e-01 -7.09699226e-02 -1.05896674e+00 -7.30468967e-02
  -1.70365196e+00  2.32669269e-01 -1.11586030e+00  1.11732609e-01
   1.60706014e-02 -1.06681472e+00  4.32365255e-01]
 [-1.09859039e+00 -7.26636521e-03  4.09523273e-01 -8.53174248e-01
  -6.64801409e-01 -1.24869898e+00  1.27307549e+00  2.19717799e-01
   1.75787784e-01 -7.78533873e-01 -5.67978459e-01  8.83177650e-01
  -1.53009577e+00 -1.87554337e-01 -1.28337827e-01  3.47136125e-01
   9.52881832e-02  8.86663239e-02  2.91820675e-01 -1.08320811e+00
  -7.59771228e-01  1.09450734e+00  1.07101128e-01 -9.82775110e-02
   6.60121473e-01  1.29116455e-01  4.47382202e-02  5.88549013e-01
   6.04619024e-01  8.63839896e-01 -2.27349325e+00  1.51005316e-01
  -2.40063163e-02 -1.54965119e+00  2.19877898e-01]
 [ 9.07266987e-01 -2.17027266e-02 -7.44848820e-01  1.88696030e-01
  -9.40111005e-01 -5.80787796e-01 -9.42510394e-02  1.43073547e+00
   8.69207083e-01 -3.67706280e-01 -2.03212899e-01 -1.78468195e-01
  -9.78427790e-01  4.87000359e-01  2.68900325e-01 -9.67665049e-01
  -1.30460034e-02 -4.56485817e-01  5.93246272e-01 -1.76858554e-01
   1.89695703e+00 -2.94886361e-01 -2.81288701e-01  1.00084241e+00
  -5.50108997e-01 -5.47752820e-01  8.87671437e-01 -1.20721131e+00
  -7.67462800e-01  1.11806808e-01 -1.39627593e+00 -4.77357996e-01
   1.66759812e-01  2.50501881e+00  7.15681731e-01]
 [ 1.02883410e+00 -3.10863614e-02  8.46050536e-01  9.92246794e-01
   1.54412509e-01  2.59575863e-01 -2.79117466e-02 -1.56566943e-01
  -1.80827855e-01  1.11791879e+00  1.00758902e+00 -4.70763825e-02
   8.12767943e-02 -9.09767789e-01 -2.49572848e-01 -2.76386022e-01
  -2.61382247e-03  1.07014127e-01  2.84567118e-01  3.27682439e-02
  -9.48179688e-01  5.41322809e-01  6.76739544e-01 -7.68349702e-01
  -1.72705792e-01 -1.35177564e-01  2.28879669e-01  2.05519802e-01
  -8.70222221e-02  2.65316273e-02 -1.21074159e-01 -3.49721698e-01
   1.12255204e-01 -1.44699534e+00  7.39054035e-03]
 [-1.03780683e+00 -1.71840885e-01 -1.39033238e+00 -8.24430040e-01
  -1.23556520e+00  4.67613773e-01 -7.02361223e-01  6.05528738e-01
   1.64133678e-01 -1.30687024e+00 -3.89067544e-01 -5.62132288e-01
  -3.63404655e-01  1.07356966e+00 -3.23360382e-03  2.55036406e-01
  -5.23673008e-02  1.53217230e-01 -2.06256916e-01 -2.04307262e-01
  -2.45576661e-01 -7.19423324e-01 -3.33074012e-01 -2.13751606e-01
   3.67996877e-01  2.28226712e-01  5.51985006e-01  2.60238261e-01
  -2.06496014e-01 -4.60946964e-01 -3.81685034e-01  2.44277995e-01
  -9.69463065e-02  1.71427197e-01  7.82196594e-02]]

Y train: 
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]

X test: 
 [[-1.41719456e+00  9.49930258e-02 -2.52126916e-01 -1.14574196e+00
   1.97751720e+00 -9.37083488e-01 -6.30371200e-01 -3.15205910e+00
  -1.19721248e+00 -1.31787397e+00 -1.97697849e+00  1.60952140e+00
   1.14293118e+00  1.55587474e+00 -1.49039412e+00  1.46879844e-01
  -1.94951439e-01 -2.15333160e-01  1.90995824e+00  1.10406075e+00
  -1.99665884e-02  8.87699211e-01 -6.12954252e-01  1.67651918e-01
  -1.56156494e-01  7.46681046e-01  1.03035463e+00  1.18349915e+01
  -7.66083729e-02 -7.99711737e-01  1.33925533e-02  1.76103405e+01
  -7.88183727e-01  2.36905015e-01  7.31041656e-02]
 [-9.44390393e-03 -9.77355122e-03  5.22424141e-01 -4.15334406e-02
   2.86052721e-01  4.50936179e-01  1.81869532e-01 -1.19261271e-01
   6.67441666e-02 -2.79257667e-01  6.33296081e-01  5.28091966e-02
   3.79092646e-01 -5.24098895e-01  3.76709667e-01  8.58704744e-01
   1.18508999e-01  3.91983778e-01 -6.15768276e-01  3.19068202e-01
   6.13762062e-01 -4.29772662e-01  2.99612419e-01  1.45645673e+00
  -3.97836442e-01  5.95818823e-01 -1.65175836e+00  1.40414330e+00
  -2.78017888e-01  5.94815808e-01  1.57404524e+00 -1.42404458e-01
   1.16075280e-03 -4.71430487e-01 -1.52680198e-01]
 [ 6.02621600e-01  2.87863695e-02 -3.17642944e-01 -2.69223918e-02
  -3.89140920e-01  1.41258484e-01 -3.33662257e-01 -1.08232916e-01
  -1.84315715e-01 -3.73326629e-01 -3.34564901e-01 -1.47089851e+00
   8.29907153e-01 -6.56100835e-02 -1.71179243e+00 -6.01123281e-01
  -7.25059551e-02 -5.73955668e-01  1.06419879e+00 -5.89875372e-02
   9.47731432e-03 -3.17863670e-02 -8.90733854e-02 -5.81426538e-01
  -2.11582491e+00 -1.25418178e-01  1.03207173e+00 -2.09923814e-01
   3.72467388e-01 -6.50370148e-01  4.07315741e-01 -1.10401055e-01
   4.77395630e-02  1.63003165e-01  1.12676453e+00]
 [-1.11116181e+00 -1.77054881e-03  2.25706924e-01 -8.03241791e-01
   2.83732468e-01 -3.50907852e-01  6.71439288e-01 -2.60179150e-01
  -3.71426809e-02 -7.74529272e-01 -7.07878351e-01  2.45335441e-01
  -3.27810726e-02 -5.16643792e-01  4.35836810e-01  2.71525912e-01
   3.06258740e-01 -1.50404212e-01 -2.08978608e-01 -2.42941706e-01
  -1.17136013e+00 -1.27852024e-01 -4.01711967e-01 -5.82340296e-01
  -1.65523934e-01  5.92130260e-01 -1.00784519e+00  2.79628075e-01
   5.21838082e-01  4.38410765e-01  2.17557916e-01 -1.78979776e-01
  -1.06136864e-01 -1.50020632e+00 -3.78464562e-01]
 [ 1.58192641e+00  1.49630017e-02  3.86518993e-01  1.72468451e+00
  -3.91461173e-01 -9.34318509e-01 -6.22953476e-01  9.00248949e-01
   1.91655733e-01  2.97916253e-01 -2.65192307e-01  4.54363936e-01
  -1.09092210e+00 -5.44274296e-02  1.43485935e-01 -1.41533699e+00
   8.46651474e-01 -3.50045022e-01  1.23549254e-01 -3.78500578e-01
  -7.81913164e-01  1.38175116e+00  9.68198254e-02 -1.23933226e+00
   5.55768933e-01 -9.45016856e-01 -9.30003246e-01 -9.95145654e-01
  -3.29093028e-01 -1.08502353e-01 -1.93907490e+00 -3.93859769e-01
   7.68513193e-02  4.22137196e-01  7.31041656e-02]
 [-1.93063555e-01 -2.20914412e+00 -5.68065778e-01  1.90739261e-01
  -2.21285983e+00 -3.84087605e-01  1.37612303e+00  8.86769847e-01
   1.91568270e+00  1.16900268e-01 -3.12907753e-01 -3.41266321e+00
  -4.19193507e-01  9.40828771e-01 -2.68804726e+00 -1.57483074e+00
  -3.02703464e-01 -4.67054181e-01 -3.26147234e-01 -2.88055236e-02
   1.23114250e+00 -1.14128359e-01 -2.83522309e+00  8.58960566e-01
  -1.23153859e+00 -1.13436309e+00  3.29204733e-01  3.66874946e-01
  -1.96104927e-01  9.09644024e-01 -9.36591340e-01  8.16193642e-02
  -2.47536823e-01  1.73147740e+00  4.58879144e+00]
 [-1.04995526e+00  3.53342805e-02 -8.22278795e-01 -1.38510532e+00
  -1.77997891e-01 -7.21415094e-01 -4.30092663e-01  3.65986381e-01
   3.07910062e-01 -8.98272986e-01 -9.81839091e-01  7.29401428e-01
  -1.42491424e+00  7.80544065e-01 -3.11793068e-01  1.55370005e-01
   1.54426341e-01 -4.06636568e-01 -3.30272890e-01 -5.98491031e-01
   1.39599412e+00 -6.08180312e-01 -1.13683512e+00  1.11704642e+00
   4.45233143e-01  5.93788240e-02  9.95440227e-01 -4.42582137e-01
   3.80176844e-01 -1.38774297e-01 -1.16556578e+00  2.27920636e-01
  -6.37168757e-02  1.47502963e+00  4.49411439e-01]
 [-1.60081421e+00 -1.12286426e-02 -9.42211028e-01 -1.77315759e+00
   4.73993220e-01  4.34346302e-01  1.22776856e+00 -3.20222421e-01
   1.27344828e-01  1.02554116e+00  4.66531686e-01 -1.26187002e+00
  -2.14754370e-01  5.45708332e-01 -6.30282814e-03  3.81327774e-01
   6.03393114e-01  1.03699034e+00 -8.33602905e-01  8.21364558e-01
   2.51588953e+00 -1.44532390e+00 -1.22978172e+00  2.16857876e+00
   4.33992216e-01  1.45199388e-01  4.74013650e-01 -6.99475702e-01
  -6.03742367e-01  1.38390448e+00  1.34528164e+00  6.33317053e-02
  -1.21940388e-01  2.00368454e+00  1.48365620e-01]
 [ 1.74175747e-01  2.26016895e+00  2.90410770e-01  1.91383866e-01
   5.40274150e-02  8.96097865e-01 -5.48776240e-01  2.72858044e-01
   6.78934518e-01 -6.84344669e-03  1.03414940e+00 -2.55232795e-01
   1.58700593e+00 -9.15491783e-01  1.10660140e+00 -2.26279943e-01
   1.12582718e+00  3.57663375e-01 -6.87554688e-01  6.27393083e-01
  -3.01737890e-01 -3.33707005e-01  1.39068282e-01 -2.34807691e-01
  -4.69028985e-01  1.52084705e-01 -1.63630445e+00  3.62027897e-01
  -4.99664723e-01 -7.72213447e-02  1.61466747e+00 -8.29695665e-02
   2.37381862e-01 -8.74607461e-01 -4.53726017e-01]
 [ 1.33710020e+00  1.27732581e-01  1.01433581e+00  7.95593706e-01
  -4.61068765e-01 -1.25782110e+00 -2.29814126e-01 -4.07622256e-03
  -5.94041482e-02 -8.15777176e-01 -6.73802114e-01  8.77921674e-01
  -6.70062045e-01 -4.86823382e-01 -1.62661274e-01 -5.45529922e-01
  -1.07166110e+00 -1.02988594e+00 -1.06628990e+00 -7.03542651e-01
   3.11790874e-01  7.23015227e-01  1.09388341e+00  3.56292169e-01
   5.91365205e-01 -4.97594175e-01 -6.90181363e-01 -2.63241346e-01
   1.41709856e+00 -1.37765232e-01 -1.10357823e+00 -6.08739762e-01
   1.34243068e-01 -3.09538874e-01  7.31041656e-02]
 [-2.39649937e+00  2.95139152e-02 -8.94563007e-01 -2.11114552e+00
   4.24261497e-02  6.61074614e-01  2.18958150e-01 -7.07440245e-01
   2.34579802e-02  1.09230935e+00  4.57860111e-01 -9.75831025e-01
  -4.10956032e-01  1.47759616e+00 -2.94054925e-01  1.69217972e+00
  -5.94451035e-02  1.22703743e+00 -7.18084541e-01  5.90511182e-01
   3.42805137e+00 -1.50021856e+00 -4.27061041e-01  3.93131936e+00
   8.36499655e-02  1.09266825e+00  1.24270288e+00  1.05030877e+00
  -4.48589583e-01  7.45166462e-01  1.80154379e+00  5.61670412e-01
  -6.10186131e-01  1.98911907e+00  2.98888529e-01]
 [-6.82715958e-01 -6.13582285e-03 -1.01070506e+00 -8.86610716e-01
   3.23176770e-01  1.30807980e+00 -1.51928029e-01 -4.83197011e-01
  -1.48450017e-01 -5.64002819e-02  7.09205037e-01 -8.49313779e-01
   7.04098453e-01  3.55603215e-01 -1.19301369e-01  6.55263579e-02
   3.34013050e-01  3.26084037e-01 -1.80924148e-01  1.72376774e+00
   1.20127063e+00 -1.30808724e+00  2.92222942e-02  5.05133185e-01
  -1.63650446e-01  9.06887629e-01  1.23125554e+00 -6.93594101e-02
  -4.25461218e-01 -1.60973723e-01  1.32946849e+00  6.30249133e-01
  -1.37743913e-01  1.25362255e+00 -7.74187436e-02]
 [-5.60302857e-01  1.65564956e-01 -8.12532609e-01  1.82610238e+00
  -2.69315221e+00  2.15912928e-01 -1.14219413e+00 -1.79189523e+00
  -2.41788293e+00  8.48679643e-01  4.29884480e-01  2.92420062e+00
   1.16989019e+00  8.17973342e+00 -1.04102784e+00 -7.21180317e-01
   3.19808575e-02  1.80660110e+00  4.40399624e-01  3.49120121e-01
  -1.69240328e-01 -1.07478493e+00 -2.34514099e+00 -1.09191264e+00
  -5.06498744e-01 -3.75010935e-01  7.55045976e-01 -9.70910412e-01
  -1.34192270e+00 -9.09699800e-01 -9.43970811e-01  1.77629574e-01
  -1.80163901e-01  1.71732979e+00 -1.80843220e+00]
 [-1.66202076e+00  3.91751799e+00 -1.45767597e+00 -1.11716447e+00
  -1.32188265e+00  4.70291035e-01 -2.66902744e-01 -6.52696828e-03
   1.51621304e+00 -1.22884972e+00 -2.49287159e-01  9.76935171e-01
  -4.55117148e-02 -2.74352957e-01  7.43297955e-01 -2.18984560e-01
  -9.04646260e-02  2.89707836e-01  7.48998683e-01 -1.00542783e+00
  -1.06822088e+00  3.68319597e-02 -3.00315670e-01 -8.59412010e-01
   1.90468027e+00  4.09300492e-01  1.23755158e+00  2.30084726e+00
   3.37774840e-01 -6.24134463e-01 -6.93279641e-01  4.02260987e+00
   3.52165358e-01 -8.57236348e-01  2.23627075e-01]
 [ 7.86241251e-01 -3.96029238e-02  5.57889429e-01  9.04531966e-01
   7.26900803e-01  8.38033297e-01 -1.85307785e-01 -7.50328295e-01
  -3.21594763e-01  1.40804871e+00  6.12597599e-01 -7.44799532e-01
   1.83787447e+00 -8.81943821e-01  3.12326777e-01  2.11216802e-01
   5.26660611e-01  1.33405313e+00 -3.35223677e-01  1.01156328e+00
  -4.55205674e-01 -1.48649489e+00 -7.22800240e-01  1.76484912e-01
  -4.31559226e-01  2.86348395e-01 -1.11545024e+00  1.04061467e+00
  -6.04706049e-01  1.96488756e-02  2.94620515e+00 -3.72504191e-02
  -8.20156939e-02 -4.17765089e-01 -4.53726017e-01]
 [ 5.41415049e-01 -2.72346474e-02  1.59378714e-01  1.00466062e+00
   1.20951344e+00  1.00393206e+00 -2.18687541e-01 -7.46652176e-01
  -4.58873812e-01  7.84878927e-01  1.01759083e-01 -5.02766538e-01
   2.48114633e+00 -7.77572384e-01  5.55405033e-01 -3.56676757e-02
  -1.69973359e-02  5.20128508e-01  5.25879734e-02  9.04365096e-01
  -1.58075021e+00  1.20334351e+00  3.67209950e-01 -1.37131951e+00
  -7.06961957e-01  1.46428909e-01 -7.80043023e-01  6.96474237e-01
  -2.04778064e-01 -6.04962232e-01  2.48741290e+00  2.32492551e-01
  -6.37168757e-02 -8.42253016e-01 -8.30033290e-01]
 [ 1.27589365e+00 -1.04300314e-03 -1.10265764e-01  5.72130607e-01
  -6.53649769e-01 -8.43074188e-01  1.70742947e-01  6.99287800e-01
   1.07556857e-01 -1.04516301e+00 -8.73814806e-01 -2.42013013e-02
  -8.91724991e-01 -5.16643792e-01 -3.32159084e-01 -1.26188955e+00
  -1.36177607e-01 -1.30610522e+00  1.91210010e-01 -4.24163883e-01
  -8.08789285e-01  6.95567897e-01 -3.51013819e-01 -1.64849276e+00
   3.23456425e-01 -6.94194578e-01  7.10973697e-01 -1.12116891e+00
   7.85886920e-01 -2.19499481e-01 -1.85607342e+00 -2.47558497e-01
   4.27489762e-02 -1.00906430e-01  2.98888529e-01]
 [ 1.09227400e+00  3.24240979e-02 -4.95240110e-01  7.89147655e-01
  -7.20937108e-01 -1.01726789e+00  5.00831646e-01  7.72810171e-01
   4.40242118e-01 -6.43366869e-01 -3.19574843e-01  1.51822694e-01
  -5.60728294e-01  1.91590957e-01 -2.69090132e-01 -7.72175593e-01
  -2.35766600e-01 -1.22879364e-01 -1.67722049e-01 -4.41567202e-02
   2.05368874e+00  1.46621283e-01 -3.51013819e-01  1.45665979e+00
   4.63968023e-01 -5.27102679e-01 -2.05116649e-02 -7.96416670e-01
   7.08349565e-02  7.22967037e-01 -7.83449748e-01 -4.12147428e-01
   6.35430879e-02  2.35516603e+00  5.99934348e-01]
 [-1.04995526e+00  6.31921733e-01 -8.12979339e-02 -4.45485965e-01
   1.12366408e+00 -3.34317975e-01 -1.42406762e+00 -1.67548480e+00
  -1.28873184e+00  7.59952136e-01 -1.21191905e+00 -2.05726046e-01
   3.99311901e-01  7.91726719e-01 -9.63505581e-01  1.76114191e+00
   7.48695087e-01 -8.54752648e-02  1.98009439e+00  1.50202100e+00
   3.39608514e-01  1.46621283e-01  5.44653470e-01  8.05150376e-01
  -3.37884827e-01  1.15893943e+00  7.10973697e-01  6.18921463e-01
   4.51489304e-01 -9.34926420e-01  8.90706228e-01  5.61670412e-01
  -1.74341550e-01  1.87657013e-01 -7.54771835e-01]
 [-3.15476656e-01 -1.92387515e-01 -6.57676543e-01 -2.80896798e-01
   3.41738795e-01  9.95637124e-01 -3.29953395e-01  7.16443020e-01
   1.48007429e-02  1.00832981e+00  9.25122878e-01 -6.12781535e-01
  -2.02023728e-01 -9.54304941e-02  1.99759022e-02  3.60582092e-01
  -1.96632943e+00  5.50280209e-01 -2.70038315e-01  2.73404897e-01
   3.05785878e-03 -2.23917682e-01 -3.84812584e-01  3.92181628e-02
   8.17764775e-02 -3.99970210e-01 -2.97537420e-01 -1.80841523e-01
  -1.18580623e+00 -6.65506120e-01  1.46433872e-01 -3.71000195e-01
   4.27489762e-02  6.22387684e-02 -2.15728901e-03]]
Start fitting Grid Search CV: 
 Time elapsed: 0:00:00.229073
Fitting...
Done fitting Grid Search CV: 
 Time elapsed: 0:01:16.575813
(model used: SVC)

Grid Search Best Score: 
 0.6051692686598603
Grid Search Best Estimator: 
 LogisticRegression(C=3.0, l1_ratio=0.0, max_iter=5.0, random_state=42,
                   solver='newton-cg', verbose=False)

Grid Search all CV Results: 
 {'mean_fit_time': array([0.06253066, 0.09817529, 0.07935405, 0.08344722, 0.04841948,
       0.05981402, 0.12814603, 0.26169744, 0.30287685, 0.04457865,
       0.06202908, 0.09007974, 0.08897276, 0.08549657, 0.04093351,
       0.06439934, 0.12440486, 0.24204717, 0.33839636, 0.04661293,
       0.04928131, 0.0740665 , 0.07852702, 0.08221998, 0.04890738,
       0.06693769, 0.13690338, 0.25437565, 0.30795097, 0.0454566 ,
       0.06204972, 0.15322723, 0.10455141, 0.10580087, 0.09018989,
       0.06844082, 0.18853297, 0.37089844, 0.337116  , 0.05126777,
       0.07063231, 0.11608906, 0.08250084, 0.08915496, 0.04016256,
       0.06202998, 0.15040383, 0.32020173, 0.35686626, 0.05335193,
       0.21992359, 0.09631758, 0.07794323, 0.08545995, 0.02983799,
       0.43877425, 0.530971  , 0.28487282, 0.35683022, 0.0988574 ,
       0.20130386, 0.10865388, 0.08657794, 0.08700747, 0.03655567,
       0.39153423, 0.57474017, 0.3025404 , 0.30551319, 0.10522566,
       0.21056256, 0.09108438, 0.09179301, 0.08772163, 0.04312592,
       0.38716855, 0.58264093, 0.2983305 , 0.31710463, 0.11205082,
       0.21196566, 0.09787169, 0.09112854, 0.08948064, 0.03968382,
       0.40306678, 0.58689833, 0.30567756, 0.31761379, 0.118712  ,
       0.20037637, 0.1030612 , 0.08733859, 0.08610849, 0.03906317,
       0.39195361, 0.58176622, 0.29094048, 0.30743675, 0.11473684,
       0.21689315, 0.10021806, 0.07959352, 0.0872642 , 0.03710947,
       0.39674778, 0.66135387, 0.25475831, 0.27638297, 0.11675873,
       0.22721024, 0.09874358, 0.09390454, 0.08488641, 0.03616967,
       0.38422651, 0.56825147, 0.25144939, 0.26837311, 0.12413812,
       0.21340103, 0.11132722, 0.08693805, 0.08621616, 0.03423042,
       0.37809706, 0.56873264, 0.25421143, 0.26102123, 0.10971451,
       0.20631857, 0.09618735, 0.09300146, 0.08852687, 0.03797317,
       0.38271084, 0.55988278, 0.2634891 , 0.27761822, 0.11624799,
       0.21129665, 0.10731339, 0.08591723, 0.09393744, 0.03873434,
       0.3800344 , 0.56789007, 0.25591803, 0.26767259, 0.11338387]), 'std_fit_time': array([0.00221862, 0.01174794, 0.00243384, 0.00191384, 0.00570895,
       0.00432745, 0.02608122, 0.03914784, 0.04431063, 0.00524543,
       0.0049914 , 0.01153432, 0.01549953, 0.00607568, 0.00557868,
       0.00605244, 0.01466956, 0.04747608, 0.09870749, 0.00531154,
       0.00703179, 0.00218142, 0.00862933, 0.00849012, 0.00447201,
       0.01025363, 0.02273743, 0.03873535, 0.05966267, 0.00389766,
       0.00739484, 0.04015385, 0.0091343 , 0.00802204, 0.03215919,
       0.00261331, 0.03387591, 0.08674811, 0.05996423, 0.00623259,
       0.00993553, 0.00761833, 0.00881131, 0.00543593, 0.0063825 ,
       0.0084991 , 0.02265862, 0.05634759, 0.04934865, 0.01033343,
       0.03426366, 0.0096605 , 0.00497406, 0.01258666, 0.00477488,
       0.08344105, 0.05319563, 0.01308613, 0.08310443, 0.01541863,
       0.05715623, 0.01369967, 0.00967121, 0.01022581, 0.00409513,
       0.09795714, 0.02727402, 0.01436221, 0.02879321, 0.01321776,
       0.02496717, 0.00835468, 0.00923484, 0.00568179, 0.00512218,
       0.09076058, 0.03611419, 0.01156306, 0.01853446, 0.0145947 ,
       0.03286623, 0.01074849, 0.01074777, 0.00782982, 0.0048128 ,
       0.08991044, 0.03752933, 0.00928192, 0.02275981, 0.01339374,
       0.02083762, 0.01549875, 0.01188149, 0.01301319, 0.00535628,
       0.08942236, 0.03824416, 0.00890047, 0.01563069, 0.01038212,
       0.03297177, 0.0144103 , 0.01060011, 0.0052762 , 0.00558529,
       0.07843133, 0.09586119, 0.00533683, 0.00692654, 0.00592045,
       0.02848206, 0.00907485, 0.00965826, 0.00394561, 0.00772203,
       0.07117651, 0.05862056, 0.01075483, 0.01678386, 0.01291889,
       0.03168781, 0.01690853, 0.01169253, 0.00472805, 0.00953321,
       0.07700499, 0.05664791, 0.0051452 , 0.00810206, 0.01068134,
       0.02734381, 0.00743943, 0.01136136, 0.00702447, 0.00414974,
       0.07924582, 0.05911501, 0.00994793, 0.00496378, 0.01207804,
       0.03221536, 0.01646751, 0.01022653, 0.01020881, 0.00376382,
       0.07467561, 0.06779217, 0.00577351, 0.01077452, 0.00337959]), 'mean_score_time': array([0.00358701, 0.00496378, 0.00331187, 0.00448861, 0.00591116,
       0.00333538, 0.00404797, 0.00292559, 0.00329337, 0.00280886,
       0.00383139, 0.00430741, 0.00329609, 0.0064054 , 0.0034317 ,
       0.00426006, 0.0036324 , 0.00266423, 0.00318742, 0.00317922,
       0.00321507, 0.00304379, 0.0031198 , 0.00380807, 0.00525784,
       0.0057498 , 0.00465779, 0.00307269, 0.0030014 , 0.00302601,
       0.00587721, 0.0041966 , 0.0049602 , 0.00588837, 0.00558658,
       0.00774517, 0.00363622, 0.00379262, 0.00318303, 0.00433841,
       0.00603862, 0.00462856, 0.00480261, 0.00401006, 0.00364199,
       0.00380883, 0.00383325, 0.00423489, 0.00394993, 0.00317659,
       0.00344815, 0.00450125, 0.00404782, 0.00375266, 0.00394316,
       0.00390978, 0.00394015, 0.00318913, 0.00379419, 0.00307288,
       0.00380435, 0.00473881, 0.00445061, 0.00329642, 0.00492663,
       0.00396109, 0.00406122, 0.00299416, 0.00293498, 0.004843  ,
       0.00377479, 0.00389571, 0.00477567, 0.0055716 , 0.00823784,
       0.00442896, 0.00436759, 0.00305223, 0.00280442, 0.00328598,
       0.00447388, 0.00369706, 0.00451183, 0.00494475, 0.00618701,
       0.00412736, 0.00383277, 0.0033011 , 0.00317974, 0.00368938,
       0.00368419, 0.00388784, 0.00411181, 0.00384798, 0.00556936,
       0.00406852, 0.00452533, 0.00347967, 0.00354943, 0.00462146,
       0.0041872 , 0.00450072, 0.00328665, 0.00431318, 0.00448866,
       0.00354633, 0.00396409, 0.00282664, 0.00480428, 0.00389733,
       0.0033762 , 0.00409155, 0.00386167, 0.00407591, 0.00667448,
       0.00350761, 0.00415573, 0.00304046, 0.00348072, 0.004884  ,
       0.00298772, 0.00394273, 0.00418944, 0.00413504, 0.00452037,
       0.00401101, 0.00427079, 0.00360212, 0.00333929, 0.00347733,
       0.0037323 , 0.00481677, 0.00475779, 0.00373535, 0.00508547,
       0.00344977, 0.00339713, 0.00372891, 0.00339003, 0.00530257,
       0.00375977, 0.00376582, 0.00401196, 0.00459919, 0.00556054,
       0.00363846, 0.00394392, 0.00353136, 0.00337238, 0.00480504]), 'std_score_time': array([0.00057742, 0.00080653, 0.00046863, 0.00041868, 0.00176007,
       0.00041406, 0.00127483, 0.0004187 , 0.00090656, 0.0004234 ,
       0.00060316, 0.00109901, 0.00052979, 0.00160258, 0.00042775,
       0.00049671, 0.00062006, 0.00032158, 0.00084091, 0.00043647,
       0.00076784, 0.00067009, 0.00019998, 0.0008456 , 0.00152301,
       0.00193487, 0.00240405, 0.000653  , 0.00076572, 0.00084493,
       0.00295477, 0.00080675, 0.001918  , 0.00224625, 0.00164528,
       0.00318383, 0.00060698, 0.0010083 , 0.00026547, 0.00117014,
       0.00322756, 0.00112214, 0.00140729, 0.00066768, 0.00106412,
       0.0007078 , 0.00097452, 0.00218616, 0.00146278, 0.00016314,
       0.00023577, 0.00143891, 0.00106931, 0.00036891, 0.00017538,
       0.00032528, 0.00045992, 0.00096923, 0.00135112, 0.00039824,
       0.00106918, 0.0015685 , 0.00207538, 0.0001935 , 0.00175562,
       0.00097726, 0.00044737, 0.00053459, 0.0008212 , 0.00238559,
       0.00050266, 0.00124888, 0.00133404, 0.0021683 , 0.00458273,
       0.00052868, 0.00095097, 0.00090882, 0.00032809, 0.00049199,
       0.00043338, 0.00035688, 0.00265714, 0.00191695, 0.00162912,
       0.00076217, 0.00027864, 0.00049033, 0.00022133, 0.00047739,
       0.00062128, 0.00056422, 0.00065468, 0.00085874, 0.00126475,
       0.00056984, 0.00085746, 0.00046154, 0.00056588, 0.00109038,
       0.00196731, 0.00101476, 0.00019784, 0.0015744 , 0.00091746,
       0.00080644, 0.00099794, 0.00051247, 0.00275008, 0.00027115,
       0.00043627, 0.00088011, 0.00066142, 0.0009403 , 0.00282134,
       0.00020251, 0.00135112, 0.00042688, 0.00072855, 0.00309039,
       0.00041016, 0.00062385, 0.00093042, 0.00106196, 0.00194122,
       0.00084203, 0.00136428, 0.00077958, 0.00074538, 0.00038093,
       0.00068025, 0.00208512, 0.00132306, 0.00079131, 0.00146661,
       0.0005256 , 0.00037659, 0.00113534, 0.00037546, 0.00250982,
       0.00099919, 0.0005466 , 0.0008047 , 0.00139414, 0.00088489,
       0.00065165, 0.00057098, 0.00119619, 0.00072447, 0.00316752]), 'param_C': masked_array(data=[1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
                   1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
                   1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
                   1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
                   1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
                   1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05,
                   1e-05, 1e-05, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 1.500005, 1.500005, 1.500005, 1.500005,
                   1.500005, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
                   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
                   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
                   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
                   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_l1_ratio': masked_array(data=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25,
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                   0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75,
                   0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75,
                   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0,
                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25,
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                   0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75,
                   0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75,
                   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0,
                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25,
                   0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25,
                   0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.75,
                   0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75,
                   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0,
                   5.0, 5.0, 5.0, 5.0, 5.0, 30.0, 30.0, 30.0, 30.0, 30.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2', 'l2', 'l2', 'l2'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs',
                   'liblinear', 'newton-cg', 'sag', 'saga', 'lbfgs'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1e-05, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 1.500005, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.25, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.5, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 0.75, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 5.0, 'penalty': 'l2', 'solver': 'lbfgs'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'liblinear'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'newton-cg'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'sag'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'saga'}, {'C': 3.0, 'l1_ratio': 1.0, 'max_iter': 30.0, 'penalty': 'l2', 'solver': 'lbfgs'}], 'split0_test_score': array([0.586356  , 0.58078282, 0.58281551, 0.58583882, 0.56283465,
       0.586356  , 0.58077381, 0.58084457, 0.58154186, 0.58078025,
       0.586356  , 0.58078282, 0.58281551, 0.58583882, 0.56283465,
       0.586356  , 0.58077381, 0.58084457, 0.58154186, 0.58078025,
       0.586356  , 0.58078282, 0.58281551, 0.58583882, 0.56283465,
       0.586356  , 0.58077381, 0.58084457, 0.58154186, 0.58078025,
       0.586356  , 0.58078282, 0.58281551, 0.58583882, 0.56283465,
       0.586356  , 0.58077381, 0.58084457, 0.58154186, 0.58078025,
       0.586356  , 0.58078282, 0.58281551, 0.58583882, 0.56283465,
       0.586356  , 0.58077381, 0.58084457, 0.58154186, 0.58078025,
       0.59424748, 0.59854186, 0.5917838 , 0.59362223, 0.59345627,
       0.59467717, 0.59463858, 0.59651174, 0.59541563, 0.59594439,
       0.59424748, 0.59854186, 0.5917838 , 0.59362223, 0.59345627,
       0.59467717, 0.59463858, 0.59651174, 0.59541563, 0.59594439,
       0.59424748, 0.59854186, 0.5917838 , 0.59362223, 0.59345627,
       0.59467717, 0.59463858, 0.59651174, 0.59541563, 0.59594439,
       0.59424748, 0.59854186, 0.5917838 , 0.59362223, 0.59345627,
       0.59467717, 0.59463858, 0.59651174, 0.59541563, 0.59594439,
       0.59424748, 0.59854186, 0.5917838 , 0.59362223, 0.59345627,
       0.59467717, 0.59463858, 0.59651174, 0.59541563, 0.59594439,
       0.59362352, 0.5985573 , 0.59178895, 0.59362481, 0.59346013,
       0.59428993, 0.59426678, 0.59650403, 0.59541049, 0.59555586,
       0.59362352, 0.5985573 , 0.59178895, 0.59362481, 0.59346013,
       0.59428993, 0.59426678, 0.59650403, 0.59541049, 0.59555586,
       0.59362352, 0.5985573 , 0.59178895, 0.59362481, 0.59346013,
       0.59428993, 0.59426678, 0.59650403, 0.59541049, 0.59555586,
       0.59362352, 0.5985573 , 0.59178895, 0.59362481, 0.59346013,
       0.59428993, 0.59426678, 0.59650403, 0.59541049, 0.59555586,
       0.59362352, 0.5985573 , 0.59178895, 0.59362481, 0.59346013,
       0.59428993, 0.59426678, 0.59650403, 0.59541049, 0.59555586]), 'split1_test_score': array([0.59326201, 0.58569344, 0.58575391, 0.58397337, 0.57505011,
       0.59326201, 0.58569473, 0.58572818, 0.58637787, 0.58569602,
       0.59326201, 0.58569344, 0.58575391, 0.58397337, 0.57505011,
       0.59326201, 0.58569473, 0.58572818, 0.58637787, 0.58569602,
       0.59326201, 0.58569344, 0.58575391, 0.58397337, 0.57505011,
       0.59326201, 0.58569473, 0.58572818, 0.58637787, 0.58569602,
       0.59326201, 0.58569344, 0.58575391, 0.58397337, 0.57505011,
       0.59326201, 0.58569473, 0.58572818, 0.58637787, 0.58569602,
       0.59326201, 0.58569344, 0.58575391, 0.58397337, 0.57505011,
       0.59326201, 0.58569473, 0.58572818, 0.58637787, 0.58569602,
       0.60120238, 0.60274362, 0.59897542, 0.59546066, 0.60101455,
       0.60128729, 0.60130015, 0.60262012, 0.60192025, 0.60073023,
       0.60120238, 0.60274362, 0.59897542, 0.59546066, 0.60101455,
       0.60128729, 0.60130015, 0.60262012, 0.60192025, 0.60073023,
       0.60120238, 0.60274362, 0.59897542, 0.59546066, 0.60101455,
       0.60128729, 0.60130015, 0.60262012, 0.60192025, 0.60073023,
       0.60120238, 0.60274362, 0.59897542, 0.59546066, 0.60101455,
       0.60128729, 0.60130015, 0.60262012, 0.60192025, 0.60073023,
       0.60120238, 0.60274362, 0.59897542, 0.59546066, 0.60101455,
       0.60128729, 0.60130015, 0.60262012, 0.60192025, 0.60073023,
       0.60121138, 0.60273719, 0.59898057, 0.59546066, 0.60101712,
       0.60130401, 0.60130144, 0.60261497, 0.60192154, 0.60067105,
       0.60121138, 0.60273719, 0.59898057, 0.59546066, 0.60101712,
       0.60130401, 0.60130144, 0.60261497, 0.60192154, 0.60067105,
       0.60121138, 0.60273719, 0.59898057, 0.59546066, 0.60101712,
       0.60130401, 0.60130144, 0.60261497, 0.60192154, 0.60067105,
       0.60121138, 0.60273719, 0.59898057, 0.59546066, 0.60101712,
       0.60130401, 0.60130144, 0.60261497, 0.60192154, 0.60067105,
       0.60121138, 0.60273719, 0.59898057, 0.59546066, 0.60101712,
       0.60130401, 0.60130144, 0.60261497, 0.60192154, 0.60067105]), 'split2_test_score': array([0.59671072, 0.57893597, 0.58430452, 0.58756844, 0.5643944 ,
       0.59671072, 0.57893982, 0.57898209, 0.58033351, 0.57893341,
       0.59671072, 0.57893597, 0.58430452, 0.58756844, 0.5643944 ,
       0.59671072, 0.57893982, 0.57898209, 0.58033351, 0.57893341,
       0.59671072, 0.57893597, 0.58430452, 0.58756844, 0.5643944 ,
       0.59671072, 0.57893982, 0.57898209, 0.58033351, 0.57893341,
       0.59671072, 0.57893597, 0.58430452, 0.58756844, 0.5643944 ,
       0.59671072, 0.57893982, 0.57898209, 0.58033351, 0.57893341,
       0.59671072, 0.57893597, 0.58430452, 0.58756844, 0.5643944 ,
       0.59671072, 0.57893982, 0.57898209, 0.58033351, 0.57893341,
       0.59166754, 0.59510182, 0.59892168, 0.60122999, 0.58335276,
       0.59162143, 0.59155994, 0.59396688, 0.59545537, 0.59129862,
       0.59166754, 0.59510182, 0.59892168, 0.60122999, 0.58335276,
       0.59162143, 0.59155994, 0.59396688, 0.59545537, 0.59129862,
       0.59166754, 0.59510182, 0.59892168, 0.60122999, 0.58335276,
       0.59162143, 0.59155994, 0.59396688, 0.59545537, 0.59129862,
       0.59166754, 0.59510182, 0.59892168, 0.60122999, 0.58335276,
       0.59162143, 0.59155994, 0.59396688, 0.59545537, 0.59129862,
       0.59166754, 0.59510182, 0.59892168, 0.60122999, 0.58335276,
       0.59162143, 0.59155994, 0.59396688, 0.59545537, 0.59129862,
       0.59161887, 0.59513001, 0.5989204 , 0.60123255, 0.58334508,
       0.5915087 , 0.59148436, 0.59396688, 0.59545537, 0.59128709,
       0.59161887, 0.59513001, 0.5989204 , 0.60123255, 0.58334508,
       0.5915087 , 0.59148436, 0.59396688, 0.59545537, 0.59128709,
       0.59161887, 0.59513001, 0.5989204 , 0.60123255, 0.58334508,
       0.5915087 , 0.59148436, 0.59396688, 0.59545537, 0.59128709,
       0.59161887, 0.59513001, 0.5989204 , 0.60123255, 0.58334508,
       0.5915087 , 0.59148436, 0.59396688, 0.59545537, 0.59128709,
       0.59161887, 0.59513001, 0.5989204 , 0.60123255, 0.58334508,
       0.5915087 , 0.59148436, 0.59396688, 0.59545537, 0.59128709]), 'split3_test_score': array([0.62096462, 0.61060029, 0.61108962, 0.61122028, 0.58816665,
       0.62096462, 0.61057723, 0.61058748, 0.61063872, 0.61057723,
       0.62096462, 0.61060029, 0.61108962, 0.61122028, 0.58816665,
       0.62096462, 0.61057723, 0.61058748, 0.61063872, 0.61057723,
       0.62096462, 0.61060029, 0.61108962, 0.61122028, 0.58816665,
       0.62096462, 0.61057723, 0.61058748, 0.61063872, 0.61057723,
       0.62096462, 0.61060029, 0.61108962, 0.61122028, 0.58816665,
       0.62096462, 0.61057723, 0.61058748, 0.61063872, 0.61057723,
       0.62096462, 0.61060029, 0.61108962, 0.61122028, 0.58816665,
       0.62096462, 0.61057723, 0.61058748, 0.61063872, 0.61057723,
       0.6127472 , 0.62710047, 0.63195663, 0.63263426, 0.62429258,
       0.6124372 , 0.61241286, 0.63074227, 0.63325938, 0.61854231,
       0.6127472 , 0.62710047, 0.63195663, 0.63263426, 0.62429258,
       0.6124372 , 0.61241286, 0.63074227, 0.63325938, 0.61854231,
       0.6127472 , 0.62710047, 0.63195663, 0.63263426, 0.62429258,
       0.6124372 , 0.61241286, 0.63074227, 0.63325938, 0.61854231,
       0.6127472 , 0.62710047, 0.63195663, 0.63263426, 0.62429258,
       0.6124372 , 0.61241286, 0.63074227, 0.63325938, 0.61854231,
       0.6127472 , 0.62710047, 0.63195663, 0.63263426, 0.62429258,
       0.6124372 , 0.61241286, 0.63074227, 0.63325938, 0.61854231,
       0.61061694, 0.62707485, 0.63195791, 0.63263298, 0.62429258,
       0.61067715, 0.61062335, 0.6307269 , 0.63325938, 0.61821566,
       0.61061694, 0.62707485, 0.63195791, 0.63263298, 0.62429258,
       0.61067715, 0.61062335, 0.6307269 , 0.63325938, 0.61821566,
       0.61061694, 0.62707485, 0.63195791, 0.63263298, 0.62429258,
       0.61067715, 0.61062335, 0.6307269 , 0.63325938, 0.61821566,
       0.61061694, 0.62707485, 0.63195791, 0.63263298, 0.62429258,
       0.61067715, 0.61062335, 0.6307269 , 0.63325938, 0.61821566,
       0.61061694, 0.62707485, 0.63195791, 0.63263298, 0.62429258,
       0.61067715, 0.61062335, 0.6307269 , 0.63325938, 0.61821566]), 'split4_test_score': array([0.55306549, 0.56559338, 0.56333759, 0.55969836, 0.55999042,
       0.55306549, 0.56559338, 0.56554343, 0.5645289 , 0.56559723,
       0.55306549, 0.56559338, 0.56333759, 0.55969836, 0.55999042,
       0.55306549, 0.56559338, 0.56554343, 0.5645289 , 0.56559723,
       0.55306549, 0.56559338, 0.56333759, 0.55969836, 0.55999042,
       0.55306549, 0.56559338, 0.56554343, 0.5645289 , 0.56559723,
       0.55306549, 0.56559338, 0.56333759, 0.55969836, 0.55999042,
       0.55306549, 0.56559338, 0.56554343, 0.5645289 , 0.56559723,
       0.55306549, 0.56559338, 0.56333759, 0.55969836, 0.55999042,
       0.55306549, 0.56559338, 0.56554343, 0.5645289 , 0.56559723,
       0.59981836, 0.60232138, 0.5689982 , 0.56682568, 0.57561186,
       0.59974534, 0.59973125, 0.58613119, 0.58003249, 0.6013235 ,
       0.59981836, 0.60232138, 0.5689982 , 0.56682568, 0.57561186,
       0.59974534, 0.59973125, 0.58613119, 0.58003249, 0.6013235 ,
       0.59981836, 0.60232138, 0.5689982 , 0.56682568, 0.57561186,
       0.59974534, 0.59973125, 0.58613119, 0.58003249, 0.6013235 ,
       0.59981836, 0.60232138, 0.5689982 , 0.56682568, 0.57561186,
       0.59974534, 0.59973125, 0.58613119, 0.58003249, 0.6013235 ,
       0.59981836, 0.60232138, 0.5689982 , 0.56682568, 0.57561186,
       0.59974534, 0.59973125, 0.58613119, 0.58003249, 0.6013235 ,
       0.59902544, 0.60234699, 0.5689982 , 0.56682824, 0.57560545,
       0.59870135, 0.59870776, 0.58613119, 0.58004273, 0.60134271,
       0.59902544, 0.60234699, 0.5689982 , 0.56682824, 0.57560545,
       0.59870135, 0.59870776, 0.58613119, 0.58004273, 0.60134271,
       0.59902544, 0.60234699, 0.5689982 , 0.56682824, 0.57560545,
       0.59870135, 0.59870776, 0.58613119, 0.58004273, 0.60134271,
       0.59902544, 0.60234699, 0.5689982 , 0.56682824, 0.57560545,
       0.59870135, 0.59870776, 0.58613119, 0.58004273, 0.60134271,
       0.59902544, 0.60234699, 0.5689982 , 0.56682824, 0.57560545,
       0.59870135, 0.59870776, 0.58613119, 0.58004273, 0.60134271]), 'mean_test_score': array([0.59007177, 0.58432118, 0.58546023, 0.58565985, 0.57008725,
       0.59007177, 0.5843158 , 0.58433715, 0.58468417, 0.58431683,
       0.59007177, 0.58432118, 0.58546023, 0.58565985, 0.57008725,
       0.59007177, 0.5843158 , 0.58433715, 0.58468417, 0.58431683,
       0.59007177, 0.58432118, 0.58546023, 0.58565985, 0.57008725,
       0.59007177, 0.5843158 , 0.58433715, 0.58468417, 0.58431683,
       0.59007177, 0.58432118, 0.58546023, 0.58565985, 0.57008725,
       0.59007177, 0.5843158 , 0.58433715, 0.58468417, 0.58431683,
       0.59007177, 0.58432118, 0.58546023, 0.58565985, 0.57008725,
       0.59007177, 0.5843158 , 0.58433715, 0.58468417, 0.58431683,
       0.59993659, 0.60516183, 0.59812715, 0.59795457, 0.5955456 ,
       0.59995369, 0.59992856, 0.60199444, 0.60121662, 0.60156781,
       0.59993659, 0.60516183, 0.59812715, 0.59795457, 0.5955456 ,
       0.59995369, 0.59992856, 0.60199444, 0.60121662, 0.60156781,
       0.59993659, 0.60516183, 0.59812715, 0.59795457, 0.5955456 ,
       0.59995369, 0.59992856, 0.60199444, 0.60121662, 0.60156781,
       0.59993659, 0.60516183, 0.59812715, 0.59795457, 0.5955456 ,
       0.59995369, 0.59992856, 0.60199444, 0.60121662, 0.60156781,
       0.59993659, 0.60516183, 0.59812715, 0.59795457, 0.5955456 ,
       0.59995369, 0.59992856, 0.60199444, 0.60121662, 0.60156781,
       0.59921923, 0.60516927, 0.59812921, 0.59795585, 0.59554407,
       0.59929623, 0.59927674, 0.60198879, 0.6012179 , 0.60141448,
       0.59921923, 0.60516927, 0.59812921, 0.59795585, 0.59554407,
       0.59929623, 0.59927674, 0.60198879, 0.6012179 , 0.60141448,
       0.59921923, 0.60516927, 0.59812921, 0.59795585, 0.59554407,
       0.59929623, 0.59927674, 0.60198879, 0.6012179 , 0.60141448,
       0.59921923, 0.60516927, 0.59812921, 0.59795585, 0.59554407,
       0.59929623, 0.59927674, 0.60198879, 0.6012179 , 0.60141448,
       0.59921923, 0.60516927, 0.59812921, 0.59795585, 0.59554407,
       0.59929623, 0.59927674, 0.60198879, 0.6012179 , 0.60141448]), 'std_test_score': array([0.02187187, 0.01472906, 0.01519666, 0.01633312, 0.01037737,
       0.02187187, 0.014721  , 0.01473155, 0.01491003, 0.01472021,
       0.02187187, 0.01472906, 0.01519666, 0.01633312, 0.01037737,
       0.02187187, 0.014721  , 0.01473155, 0.01491003, 0.01472021,
       0.02187187, 0.01472906, 0.01519666, 0.01633312, 0.01037737,
       0.02187187, 0.014721  , 0.01473155, 0.01491003, 0.01472021,
       0.02187187, 0.01472906, 0.01519666, 0.01633312, 0.01037737,
       0.02187187, 0.014721  , 0.01473155, 0.01491003, 0.01472021,
       0.02187187, 0.01472906, 0.01519666, 0.01633312, 0.01037737,
       0.02187187, 0.014721  , 0.01473155, 0.01491003, 0.01472021,
       0.00730029, 0.0113159 , 0.02017185, 0.02101146, 0.01677309,
       0.00714042, 0.00715256, 0.01531649, 0.01756613, 0.0092301 ,
       0.00730029, 0.0113159 , 0.02017185, 0.02101146, 0.01677309,
       0.00714042, 0.00715256, 0.01531649, 0.01756613, 0.0092301 ,
       0.00730029, 0.0113159 , 0.02017185, 0.02101146, 0.01677309,
       0.00714042, 0.00715256, 0.01531649, 0.01756613, 0.0092301 ,
       0.00730029, 0.0113159 , 0.02017185, 0.02101146, 0.01677309,
       0.00714042, 0.00715256, 0.01531649, 0.01756613, 0.0092301 ,
       0.00730029, 0.0113159 , 0.02017185, 0.02101146, 0.01677309,
       0.00714042, 0.00715256, 0.01531649, 0.01756613, 0.0092301 ,
       0.0066782 , 0.01129814, 0.02017199, 0.02101025, 0.0167758 ,
       0.0066275 , 0.006618  , 0.01531123, 0.01756401, 0.00916215,
       0.0066782 , 0.01129814, 0.02017199, 0.02101025, 0.0167758 ,
       0.0066275 , 0.006618  , 0.01531123, 0.01756401, 0.00916215,
       0.0066782 , 0.01129814, 0.02017199, 0.02101025, 0.0167758 ,
       0.0066275 , 0.006618  , 0.01531123, 0.01756401, 0.00916215,
       0.0066782 , 0.01129814, 0.02017199, 0.02101025, 0.0167758 ,
       0.0066275 , 0.006618  , 0.01531123, 0.01756401, 0.00916215,
       0.0066782 , 0.01129814, 0.02017199, 0.02101025, 0.0167758 ,
       0.0066275 , 0.006618  , 0.01531123, 0.01756401, 0.00916215]), 'rank_test_score': array([101, 131, 116, 111, 146, 101, 141, 126, 121, 136, 101, 131, 116,
       111, 146, 101, 141, 126, 121, 136, 101, 131, 116, 111, 146, 101,
       141, 126, 121, 136, 101, 131, 116, 111, 146, 101, 141, 126, 121,
       136, 101, 131, 116, 111, 146, 101, 141, 126, 121, 136,  46,   6,
        76,  86,  91,  41,  51,  11,  36,  21,  46,   6,  76,  86,  91,
        41,  51,  11,  36,  21,  46,   6,  76,  86,  91,  41,  51,  11,
        36,  21,  46,   6,  76,  86,  91,  41,  51,  11,  36,  21,  46,
         6,  76,  86,  91,  41,  51,  11,  36,  21,  66,   1,  71,  81,
        96,  56,  61,  16,  31,  26,  66,   1,  71,  81,  96,  56,  61,
        16,  31,  26,  66,   1,  71,  81,  96,  56,  61,  16,  31,  26,
        66,   1,  71,  81,  96,  56,  61,  16,  31,  26,  66,   1,  71,
        81,  96,  56,  61,  16,  31,  26], dtype=int32)}
type y_pred_decfct after sigmoid:  <class 'numpy.ndarray'>
[0.08504077 0.03256952 0.05972848 0.04754072 0.04414484 0.05974413
 0.03788515 0.0454824  0.04436501 0.02833525 0.03519124 0.05965827
 0.18660288 0.04652505 0.08267754 0.09711819 0.05127484 0.02497181
 0.05282882 0.06320077]

type y pred:  <class 'numpy.ndarray'>
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
type output:  <class 'numpy.ndarray'>
Script Execution Time:  0:01:16.655432
